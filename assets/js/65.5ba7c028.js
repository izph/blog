(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{730:function(t,e,s){"use strict";s.r(e);var a=s(13),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-commit规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit规范"}},[t._v("#")]),t._v(" git commit规范")]),t._v(" "),s("h2",{attrs:{id:"格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#格式"}},[t._v("#")]),t._v(" 格式")]),t._v(" "),s("p",[s("code",[t._v("<type>(<scope>): <subject>")])]),t._v(" "),s("h3",{attrs:{id:"type-必须"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-必须"}},[t._v("#")]),t._v(" type(必须)：")]),t._v(" "),s("p",[t._v("类型：用于说明git commit的类别，允许使用以下标识：")]),t._v(" "),s("ol",[s("li",[t._v("feat：新增功能（feature）。")]),t._v(" "),s("li",[t._v("fix/to：修复问题。")])]),t._v(" "),s("ul",[s("li",[t._v("fix：产生diff并自动修复此问题。适合于一次提交直接修复问题。")]),t._v(" "),s("li",[t._v("to：只产生diff不自动修复此问题。适合于多次提交。最终修复问题提交时使用fix。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("docs：修改文档（documentation）。")]),t._v(" "),s("li",[t._v("style：修改代码格式（空格、格式缩进，不影响代码运行的变动）。")]),t._v(" "),s("li",[t._v("refactor：重构代码（即不是新增功能，也不是修改bug的代码变动）。")]),t._v(" "),s("li",[t._v("perf：优化相关，修改提搞性能的代码。")]),t._v(" "),s("li",[t._v("test：新增、修改测试用例，包括单元测试和集成测试。")]),t._v(" "),s("li",[t._v("chore：改变构建过程、增加依赖库、工具等。")]),t._v(" "),s("li",[t._v("revert：回滚到上一个版本。")]),t._v(" "),s("li",[t._v("merge：代码合并。")]),t._v(" "),s("li",[t._v("sync：同步主线或分支的Bug。")])]),t._v(" "),s("h3",{attrs:{id:"scope-可选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope-可选"}},[t._v("#")]),t._v(" scope(可选)")]),t._v(" "),s("p",[t._v("scope：用于说明本次 commit 影响的范围")]),t._v(" "),s("h3",{attrs:{id:"subject-必须"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subject-必须"}},[t._v("#")]),t._v(" subject(必须)")]),t._v(" "),s("p",[t._v("subject：本次commit 的简短描述，不超过50个字符，建议使用中文，结尾不加句号或其他标点符号。")]),t._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("根据以上git commit规范，message将是如下的格式：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fix(DAO): 用户查询缺少username属性 \nfeat(Controller): 用户查询接口开发\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"检查规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查规范"}},[t._v("#")]),t._v(" 检查规范")]),t._v(" "),s("p",[t._v("推荐直接使用 https://github.com/commitizen/cz-cli  每次 git cz 代替 git commit，会自动运行交互程序，填空，就能创建规范的 commit log 信息")])])}),[],!1,null,null,null);e.default=i.exports}}]);