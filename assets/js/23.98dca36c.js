(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{671:function(t,e,s){t.exports=s.p+"assets/img/lifecycle01.ed113cb0.png"},672:function(t,e,s){t.exports=s.p+"assets/img/lifecycle02.8388262d.png"},673:function(t,e,s){t.exports=s.p+"assets/img/lifecycle03.1fb62b67.png"},783:function(t,e,s){"use strict";s.r(e);var n=s(13),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"一、生命周期调用顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、生命周期调用顺序"}},[t._v("#")]),t._v(" 一、生命周期调用顺序")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("挂载")]),t._v("\nconstructor()\nrender()\ncomponentDidMount()")]),t._v(" "),n("li",[n("strong",[t._v("更新")])])]),t._v(" "),n("p",[t._v("shouldComponentUpdate()\nrender()\ncomponentDidUpdate()")]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("strong",[t._v("卸载")]),t._v("\ncomponentWillUnmount()")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(671),alt:"image.png"}})]),t._v(" "),n("h2",{attrs:{id:"二、详解生命周期函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、详解生命周期函数"}},[t._v("#")]),t._v(" 二、详解生命周期函数")]),t._v(" "),n("h3",{attrs:{id:"_1-construcor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-construcor"}},[t._v("#")]),t._v(" 1.construcor()")]),t._v(" "),n("p",[n("strong",[t._v("如果不初始化 state 或不进行方法绑定，则不需要为 React 组件实现构造函数。")])]),t._v(" "),n("ul",[n("li",[t._v("在 React 组件挂载之前，会调用它的构造函数。在为 React.Component 子类实现构造函数时，应在其他语句之前前调用 super(props)。")]),t._v(" "),n("li",[t._v("构造函数的调用情况：")]),t._v(" "),n("li",[t._v("需要通过this.state复制对象来初始化内部state")]),t._v(" "),n("li",[t._v("为事件函数绑定实例，this.handleClick = this.handleClick.bind(this)。")])]),t._v(" "),n("p",[t._v("注意：")]),t._v(" "),n("ul",[n("li",[t._v("在 constructor() 函数中"),n("strong",[t._v("不要调用 setState() 方法")]),t._v("。如果你的组件需要使用内部 state，请直接在构造函数中为 "),n("strong",[t._v("this.state 赋值初始state")]),t._v("：")])]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不要在这里调用 this.setState()")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("counter")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("ul",[n("li",[t._v("避免将 props 的值复制给 state。直接使用this.props.xxx就可以了。")])]),t._v(" "),n("h3",{attrs:{id:"_2-componentdidmount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-componentdidmount"}},[t._v("#")]),t._v(" 2.componentDidMount()")]),t._v(" "),n("p",[t._v("1、UI渲染完成后调用。")]),t._v(" "),n("p",[t._v("2、只执行一次")]),t._v(" "),n("p",[t._v("3、典型场景：获取外部资源")]),t._v(" "),n("ul",[n("li",[t._v("组件挂载后调用，依赖DOM节点的初始化应该在此函数中执行，网络请求大多也在次函数中，进行数据初始化")]),t._v(" "),n("li",[t._v("componentDidMount() 里"),n("strong",[t._v("可以直接调用 setState()")])]),t._v(" "),n("li",[t._v("只要进入页面就会调用该函数")]),t._v(" "),n("li",[t._v("适合添加订阅，但不要忘记在componentWillUnmount取消")])]),t._v(" "),n("h3",{attrs:{id:"_3-render"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-render"}},[t._v("#")]),t._v(" 3.render()")]),t._v(" "),n("ul",[n("li",[t._v("render()方法是class组件唯一必须实现的方法")]),t._v(" "),n("li",[t._v("调用render时，检测this.props和this.state的变化并返回：")]),t._v(" "),n("li",[t._v("React元素:")])]),t._v(" "),n("p",[t._v("通常通过 JSX 创建。例如，"),n("code",[t._v("<div />")]),t._v(" 会被 React 渲染为 DOM 节点，"),n("code",[t._v("<MyComponent />")]),t._v(" 会被 React 渲染为自定义组件，无论是 "),n("code",[t._v("<div />")]),t._v(" 还是 "),n("code",[t._v("<MyComponent />")]),t._v(" 均为 React 元素。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("数组或fragment")])]),t._v(" "),n("li",[n("p",[t._v("protals")])]),t._v(" "),n("li",[n("p",[t._v("字符转或数值类型: 它们在 DOM 中会被渲染为文本节点")])]),t._v(" "),n("li",[n("p",[t._v("布尔类型或null:  什么都不渲染。（主要用于支持返回 test && "),n("code",[t._v("<Child />")]),t._v(" 的模式，其中 test 为布尔类型。)")])]),t._v(" "),n("li",[n("p",[t._v("render()不与浏览器直接交互:")]),t._v(" "),n("p",[t._v("render() 函数应该为纯函数，这意味着在不修改组件 state 的情况下，每次调用时都返回相同的结果，并且它不会直接与浏览器交互。如需与浏览器进行交互，请在 componentDidMount() 或其他生命周期方法中执行你的操作。")])])]),t._v(" "),n("h3",{attrs:{id:"_4-componentdidupdate-prevprops-prevstate-snapshot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-componentdidupdate-prevprops-prevstate-snapshot"}},[t._v("#")]),t._v(" 4.componentDidUpdate(prevProps, prevState, snapshot)")]),t._v(" "),n("p",[t._v("1、每次UI更新时被调用")]),t._v(" "),n("p",[t._v("2、典型场景：页面需要根据props变化重新获取数据")]),t._v(" "),n("ul",[n("li",[t._v("只要页面的state或者model中的state中定义的变量值发生改变，这个方法就会执行，首次渲染不执行")]),t._v(" "),n("li",[t._v("例如：在componentDidUpdata()中对originLength的监听从而达到上传或删除的操作")])]),t._v(" "),n("p",[t._v("该方法有三个参数：")]),t._v(" "),n("ul",[n("li",[t._v("prevProps: 更新前的props")]),t._v(" "),n("li",[t._v("prevState: 更新前的state")]),t._v(" "),n("li",[t._v("snapshot: getSnapshotBeforeUpdate()生命周期的返回值")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(672),alt:"image.png"}})]),t._v(" "),n("ul",[n("li",[t._v("当组件更新后可在此函数中进行DOM操作或网络请求")])]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//典型用法，判断props")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" prevProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("ul",[n("li",[t._v("componentDidUpdate() 中"),n("strong",[t._v("直接调用 setState()")]),t._v("，但请注意"),n("strong",[t._v("它必须被包裹在一个条件语件里")]),t._v("，否则会造成死循环。（每一次setState都会触发componentDidUpdate）")])]),t._v(" "),n("h3",{attrs:{id:"_5-componentwillunmount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-componentwillunmount"}},[t._v("#")]),t._v(" 5.componentWillUnmount()")]),t._v(" "),n("p",[t._v("1、组件移除时调用")]),t._v(" "),n("p",[t._v("2、典型场景：资源释放")]),t._v(" "),n("ul",[n("li",[t._v("componentWillUnmount() 会在组件卸载及销毁之前直接调用。在此方法中执行必要的清理操作，例如，清除 timer，取消网络请求或清除在 componentDidMount() 中创建的订阅等。")]),t._v(" "),n("li",[t._v("componentWillUnmount() 中"),n("strong",[t._v("不应调用 setState()")]),t._v("，因为该组件将永远不会重新渲染。组件实例卸载后，将永远不会再挂载它。")])]),t._v(" "),n("h3",{attrs:{id:"_6-错误处理阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-错误处理阶段"}},[t._v("#")]),t._v(" 6.错误处理阶段")]),t._v(" "),n("p",[t._v("componentDidCatch(error, info)，此生命周期在后代组件抛出错误后被调用。 它接收两个参数∶")]),t._v(" "),n("ul",[n("li",[t._v("error：抛出的错误。")]),t._v(" "),n("li",[t._v("info：带有 componentStack key 的对象，其中包含有关组件引发错误的栈信息")])]),t._v(" "),n("h2",{attrs:{id:"三、不常用的生命周期函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、不常用的生命周期函数"}},[t._v("#")]),t._v(" 三、不常用的生命周期函数")]),t._v(" "),n("p",[n("strong",[t._v("react16.4")]),t._v("后使用了新的生命周期，使用getDerivedStateFromProps代替了旧的componentWillReceiveProps及componentWillMount。使用getSnapshotBeforeUpdate代替了旧的componentWillUpdate。\n在 Fiber 机制下，render 阶段是允许暂停、终止和重启的。\n废弃的生命周期钩子函数，它们都处于render阶段，都可能被重复执行。\n"),n("img",{attrs:{src:s(673),alt:"image.png"}})]),t._v(" "),n("h3",{attrs:{id:"_1-getderivedstatefromprops-不常用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-getderivedstatefromprops-不常用"}},[t._v("#")]),t._v(" 1.getDerivedStateFromProps  不常用")]),t._v(" "),n("p",[t._v("1.当state需要从pros初始化时使用")]),t._v(" "),n("p",[t._v("2.尽量不要使用：维护两者状态一致性会增加复杂度")]),t._v(" "),n("p",[t._v("3.每次render都会调用")]),t._v(" "),n("p",[t._v("4.典型场景：表单控件获取默认值")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("(1) getDerivedStateFromProps 会在调用 render 方法之前调用，并且在初始挂载及后续更新时都会被调用。它应返回一个对象来更新 state，如果返回 null 则不更新任何内容。\n我们知道getDerivedStateFromProps是一个静态函数，在其中是无法访问到组件实例的，也就是强制开发者在render之前只做无副作用的操作，而是根据props和state决定新的state，仅此而已。")]),t._v(" "),n("p",[t._v("(2) 此方法适用于"),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fblog%2F2018%2F06%2F07%2Fyou-probably-dont-need-derived-state.html%23when-to-use-derived-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("罕见的用例"),n("OutboundLink")],1),t._v("，即 state 的值在任何时候都取决于 props。例如，实现 "),n("code",[t._v("<Transition>")]),t._v(" 组件可能很方便，该组件会比较当前组件与下一组件，以决定针对哪些组件进行转场动画。\n派生状态会导致代码冗余，并使组件难以维护。 "),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fblog%2F2018%2F06%2F07%2Fyou-probably-dont-need-derived-state.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("确保你已熟悉这些简单的替代方案："),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("如果你需要"),n("strong",[t._v("执行副作用")]),t._v("（例如，数据提取或动画）以响应 props 中的更改，请改用 "),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fdocs%2Freact-component.html%23componentdidupdate",target:"_blank",rel:"noopener noreferrer"}},[t._v("componentDidUpdate"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[t._v("如果只想在 "),n("strong",[t._v("prop 更改时重新计算某些数据")]),t._v("，"),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fblog%2F2018%2F06%2F07%2Fyou-probably-dont-need-derived-state.html%23what-about-memoization",target:"_blank",rel:"noopener noreferrer"}},[t._v("请使用 memoization helper 代替"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("li",[t._v("如果你想"),n("strong",[t._v("在 prop 更改时“重置”某些 state")]),t._v("，请考虑使组件"),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fblog%2F2018%2F06%2F07%2Fyou-probably-dont-need-derived-state.html%23recommendation-fully-controlled-component",target:"_blank",rel:"noopener noreferrer"}},[t._v("完全受控"),n("OutboundLink")],1),t._v("或"),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fblog%2F2018%2F06%2F07%2Fyou-probably-dont-need-derived-state.html%23recommendation-fully-uncontrolled-component-with-a-key",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 key 使组件完全不受控"),n("OutboundLink")],1),t._v(" 代替。")])]),t._v(" "),n("h3",{attrs:{id:"_2-shouldcomponentupdate-不常用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-shouldcomponentupdate-不常用"}},[t._v("#")]),t._v(" 2.shouldComponentUpdate() 不常用")]),t._v(" "),n("p",[t._v("1.决定虚拟DOM是否要重绘")]),t._v(" "),n("p",[t._v("2.一般可以由PureComponent自动实现")]),t._v(" "),n("p",[t._v("3.典型场景：性能优化")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("根据 shouldComponentUpdate() 的返回值，判断 React 组件的输出是否受当前 state 或 props 更改的影响。默认行为是 state 每次发生变化组件都会重新渲染。大部分情况下，你应该遵循默认行为。\n当 props 或 state 发生变化时，shouldComponentUpdate() 会在渲染执行之前被调用。返回值默认为 true。首次渲染或使用 forceUpdate() 时不会调用该方法。")]),t._v(" "),n("p",[t._v("此方法仅作为"),n("strong",[t._v("性能优化的方式")]),t._v("而存在。不要企图依靠此方法来“阻止”渲染，因为这可能会产生 bug。你应该"),n("strong",[t._v("考虑使用内置的 PureComponent 组件")]),t._v("，而不是手动编写 shouldComponentUpdate()。PureComponent 会对 props 和 state 进行浅层比较，并减少了跳过必要更新的可能性。\n如果你一定要手动编写此函数，可以将 this.props 与 nextProps 以及 this.state 与nextState 进行比较，并返回 false 以告知 React 可以跳过更新。请注意，返回 false 并不会阻止子组件在 state 更改时重新渲染。\n我们不建议在 shouldComponentUpdate() 中进行深层比较或使用 JSON.stringify()。这样非常影响效率，且会损害性能。\n目前，如果 shouldComponentUpdate() 返回 false，则不会调用 "),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fdocs%2Freact-component.html%23unsafe_componentwillupdate",target:"_blank",rel:"noopener noreferrer"}},[t._v("UNSAFE_componentWillUpdate()"),n("OutboundLink")],1),t._v("，"),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fdocs%2Freact-component.html%23render",target:"_blank",rel:"noopener noreferrer"}},[t._v("render()"),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fzh-hans.reactjs.org%2Fdocs%2Freact-component.html%23componentdidupdate",target:"_blank",rel:"noopener noreferrer"}},[t._v("componentDidUpdate()"),n("OutboundLink")],1),t._v("。后续版本，React 可能会将 shouldComponentUpdate 视为提示而不是严格的指令，并且，当返回 false 时，仍可能导致组件重新渲染。")]),t._v(" "),n("h3",{attrs:{id:"_3-getsnapshotbeforeupdate-不常用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-getsnapshotbeforeupdate-不常用"}},[t._v("#")]),t._v(" 3.getSnapshotBeforeUpdate  不常用")]),t._v(" "),n("p",[t._v("1.在页面render之前调用，state已更新")]),t._v(" "),n("p",[t._v("2.典型场景：获取render之前的DOM状态")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSnapshotBeforeUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("getSnapshotBeforeUpdate() 在最近一次渲染输出（提交到 DOM 节点）之前调用。它使得组件能在发生更改之前从 DOM 中捕获一些信息（例如，滚动位置）。此生命周期的任何返回值将作为参数传递给 componentDidUpdate(prevProps, prevState, snapshot)。")]),t._v(" "),n("p",[t._v("getSnapshotBeforeUpdate() 在最近一次渲染输出（提交到 DOM 节点）之前调用。它使得组件能在发生更改之前从 DOM 中捕获一些信息（例如，滚动位置）。此生命周期的任何返回值将作为参数传递给 componentDidUpdate()。\n此用法并不常见，但它可能出现在 UI 处理中，如需要以特殊方式处理滚动位置的聊天线程等。\n应返回 snapshot 的值（或 null）。")])])}),[],!1,null,null,null);e.default=a.exports}}]);